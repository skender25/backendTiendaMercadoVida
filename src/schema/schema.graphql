

"Array types defintions"
type Query{
    users: ResultUsers
    
    login(email: String!, password:String!):ResultLogin

    "autenticar token"
    me: ResultUser 
}
"Especificar propiedades"
interface Result{
    "Estado de la operacion "
    status: Boolean!
    message: String!
    
}

type ResultUsers implements Result{
    status: Boolean!
    message: String!
    users: User!
}

type ResultUser implements Result{
    status: Boolean!
    message: String!
    user: User
} 

type ResultLogin implements Result{
    status: Boolean!
    message: String!
    token: String
}


type Mutation{
    register(user: UserInput!): ResultUser
}


type User {
    id: ID!
    name: String!
    lastname: String!
    email: String!
    password: String!
    registerDate: String!
    birthday: String!
    Role: Role!
}


input UserInput{
    id: ID
    name: String!
    lastname: String!
    email: String!
    password: String!
    birthday: String!
    Role: Role=CLIENT
}

enum Role {
    CLIENT
    ADMIN
}




